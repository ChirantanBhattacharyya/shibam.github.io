{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/test/test.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,gjDAAgjD,wBAAwB,iE;;;;;;;;;;;;;;;;;ACA9hD;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;IACzB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AAEW;AACT;AACO;AAetD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;ACrB4B;AAkBlD;IAOE;QALO,SAAI,GAAG,eAAe,CAAC;QACvB,YAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QAE/B,SAAI,GAAG,QAAQ,CAAC;QAChB,eAAU,GAAE,IAAI,CAAC;IACR,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IAED,iCAAS,GAAT;QACE,OAAO,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;IAC9B,CAAC;IAdU,aAAa;QAhBzB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,2TAOO;;SAMlB,CAAC;;OACW,aAAa,CAezB;IAAD,oBAAC;CAAA;AAfyB;;;;;;;;;;;;;AClB1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <br><br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-8\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <h1>Xelpmoc Enrollment Form</h1>\\n            <form #userForm=\\\"ngForm\\\">\\n              \\n              <div class=\\\"form-group\\\">\\n                <label>Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" ngModel>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" ngModel>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Mobile</label>\\n                <input type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"mobile\\\" ngModel>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" ngModel>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\">\\n              </div>\\n          \\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Register</button>\\n            </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <br><br><br><br>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <p class=\\\"card-title\\\">Console</p>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            {{ userForm.value | json}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hello Shibam';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './test/test.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: '.app-test',\n  template: `<div>\n                User Name is {{name}}.\n                <h2>{{greetUser()}}</h2>\n                <h5> {{siteUrl}} </h5>\n\n                <input [id]=\"myId\" type=\"text\" value=\"Biswas\">\n                <input [disabled]=\"isDisabled\" id={{myId}} type=\"text\" value=\"Biswas\">\n            </div>`,\n  styles: [`\n      div{\n        color: red;\n      }\n  `]\n})\nexport class TestComponent implements OnInit {\n\n  public name = \"Shibam Biswas\";\n  public siteUrl = window.location.href;\n\n  public myId = \"testId\";\n  public isDisabled= true;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  greetUser(){\n    return \"Hello \" + this.name;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}